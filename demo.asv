%{
This is the implementation of “Matlab tutorial, Face Detection using SVM-Light” uploaded [link]
This is a very basic Face Detector, just to show you how to use SVM-Light for object recognition problems.
%}

clear; close all; clc;

% Add Path to svm library
addpath './svm_mex601/matlab/';
addpath './svm_mex601/bin/';

pathPos = './dataset/faces/';       % positive example
pathNeg = './dataset/non-faces/';   % negative example

%% if you want to use your own dataset then following functions could be
% used for cropping the faces, non-face or positive and negative examples
% respectively 
% pathN = './INRIA/'; 
% grab_neg(pathN,pathNeg);          %  cut image into 4 equal sub images 
% flip_all( pathPos, pathNeg );     %  Flip and write images to their corresponding directories

%% Learning part
if exist('model.mat','file')
    load model;
else
    [fpos, fneg] = features(pathPos, pathNeg);  % extract features
    [ model ] = trainSVM( fpos,fneg );          % train SVM
    save model model;
end

%% Detection 
tSize = [24, 32];
img = imread('./test images/9.jpg');
imshow(img); hold on;
detect(img,model,tSize);


imlist = dir([imPath1 '*.jpg']);
for j = cnt:length(imlist)
    img = imread([imPath1 imlist(j).name]);
%     imshow(im);
%     img = imresize(img,1.3);
    imshow(img); hold on;
    [results.ptsAll{1,j}] = detectAndEstimate(img,model);
    results.image{1,j} = [imPath1 imlist(j).name];
    axis off;
    saveas(gcf, ['results/' imlist(j).name]);
%     print(gcf,'-r200','-dpng','-zbuffer',[imPath1 num2str(j) '.png']);
    cnt = cnt+1;
    save cnt cnt;
    save results results;
    close all;
end

